// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RealEstateWeb.Data;

#nullable disable

namespace RealEstateWeb.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230902133512_fff")]
    partial class fff
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RealEstateWeb.Models.Estate", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Msq")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Occupancy")
                        .HasColumnType("int");

                    b.Property<double>("Rate")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.ToTable("Estates");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Details = "top floor home with a nice view",
                            ImageURL = "images/home/slide1.jpg",
                            Msq = 500.0,
                            Name = "Berlin Villa",
                            Occupancy = 6,
                            Rate = 200.0
                        },
                        new
                        {
                            ID = 2,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Details = "Top floor apartment with a balcony",
                            ImageURL = "images/home/slide2.jpg",
                            Msq = 100.0,
                            Name = "Munich Apartment",
                            Occupancy = 2,
                            Rate = 100.0
                        },
                        new
                        {
                            ID = 3,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Details = "Family home with a garden",
                            ImageURL = "images/villa/villa1.jpg",
                            Msq = 100.0,
                            Name = "Munich Villa for Family",
                            Occupancy = 1,
                            Rate = 50.0
                        },
                        new
                        {
                            ID = 4,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Details = "Furnished house for small families",
                            ImageURL = "images/villa/villa2.jpg",
                            Msq = 400.0,
                            Name = "Canada House in Toronto",
                            Occupancy = 5,
                            Rate = 600.0
                        },
                        new
                        {
                            ID = 5,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Details = "Next to the shopping district",
                            ImageURL = "images/villa/villa3.jpg",
                            Msq = 600.0,
                            Name = "Düsseldorf Old Town House",
                            Occupancy = 12,
                            Rate = 1200.0
                        },
                        new
                        {
                            ID = 6,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Details = "Newly decorated Villa in Essen",
                            ImageURL = "images/villa/villa4.jpg",
                            Msq = 600.0,
                            Name = "Essen Modern Villa",
                            Occupancy = 3,
                            Rate = 700.0
                        },
                        new
                        {
                            ID = 7,
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Details = "Minimalist Villa in Essen",
                            ImageURL = "images/villa/villa5.jpg",
                            Msq = 120.0,
                            Name = "Essen Tiny Villa",
                            Occupancy = 2,
                            Rate = 400.0
                        });
                });

            modelBuilder.Entity("RealEstateWeb.Models.EstateNumber", b =>
                {
                    b.Property<int>("EstateNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EstateID")
                        .HasColumnType("int");

                    b.Property<string>("SpecialDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("EstateNo");

                    b.HasIndex("EstateID");

                    b.ToTable("EstateNumbers");
                });

            modelBuilder.Entity("RealEstateWeb.Models.EstateNumber", b =>
                {
                    b.HasOne("RealEstateWeb.Models.Estate", "Estate")
                        .WithMany()
                        .HasForeignKey("EstateID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estate");
                });
#pragma warning restore 612, 618
        }
    }
}
